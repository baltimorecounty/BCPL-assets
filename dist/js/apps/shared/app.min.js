"use strict";!function(){var e=angular.module("sharedServices",["sharedConstants"]),r=function(e,r,n){var t=function(){var t=e.defer();return r.get(n.urls.getBranches).then(function(e){return a(e,t)}).catch(function(e){return s(e,t)})},a=function(e,r){var n=e?e.data:"There was a problem getting data, please try again later.";return r.resolve(n),r.promise},s=function(e,r){return r.reject(e),r.promise};return{getBranchesById:function(e){return t().then(function(r){return r.filter(function(r){return e.includes(r.id)})})},getBranchesByName:function(e){return t().then(function(r){return r.filter(function(r){return e.map(function(e){return e.toLowerCase()}).includes(r.name.toLowerCase())})})}}};e.factory("sharedServices.branchesService",["$q","$http","sharedConstants.CONSTANTS",r])}(),function(){var e=angular.module("sharedConstants",[]),r={urls:{getBranches:"data/branch-amenities.json"}};e.constant("sharedConstants.CONSTANTS",r)}(),function(){var e=angular.module("sharedFilters",[]),r=function(e){var r=function(r){e.search({})},n=function(e,r){return!!r&&!!Object.keys(e).filter(function(e){return e.toLowerCase()===r.toLowerCase()}).length},t=function(e){return e?e&&e.indexOf(",")>-1?e.split(","):[e]:[]},a=function(){return e.search()},s=function(e,r){return Object.hasOwnProperty.call(e,r)?t(e[r]):[]},u=function(r,n){if(r){var t=e.search();t[r]=n,e.search(t)}};return{clearQueryParams:r,doesKeyExist:n,getFiltersFromString:t,getQueryParamValuesByKey:s,setQueryParams:u,updateQueryParams:function(e,t){var i=a();if(n(i,e)){var c=s(i,e),o=c.includes(t),f=[];if(o){var l=c.indexOf(t);c.splice(l,1)}else c.push(t);f=c,f.length?u(e,f.join(",")):r()}else u(e,t)}}};e.factory("sharedFilters.filterHelperService",["$location",r])}();